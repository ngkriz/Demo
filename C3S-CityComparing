"""This workflow is part of the document:
https://cds.climate.copernicus.eu/toolbox/doc/how-to/3_how_to_plot_time_series/3_how_to_plot_time_series.html
"""
import cdstoolbox as ct



layout = ct.Layout(rows=1, fullscreen=True)
layout.add_widget(row=0, content='[submit]', md=3, sm=12, v_align='flex-end')

# Initialise an application 
@ct.application(title='Extract a time series and plot graph.', autorun=False)


@ct.input.city(
    'city1',
     default='Hong Kong',
     label='Selected city',
     description= 'Select city to extract time series from.',
     help= 'City selection.',
)


@ct.input.city(
    'city2',
     default='London',
     label='Selected city',
     description= 'Select city to extract time series from.',
     help= 'City selection.',
)


@ct.input.city(
    'city3',
     default='New York',
     label='Selected city',
     description= 'Select city to extract time series from.',
     help= 'City selection.',
)


@ct.input.dropdown('STARTYEAR', label='Start year', default=2021,values=range(1979, 2022 + 1), description='Select the starting year')
@ct.input.dropdown('ENDYEAR', label='End year',default=2021, values=range(1980, 2022 + 1),  description='Select the ending year')


@ct.output.livefigure()
@ct.output.livefigure()




def plot_time_series(city1, city2, city3, STARTYEAR, ENDYEAR):
    
     # Retrieve a variable over a defined time range
    data = ct.catalogue.retrieve(        
        'reanalysis-era5-single-levels-monthly-means',
        {
            'product_type':'monthly_averaged_reanalysis',
            'variable':[
                '2m_temperature'
            ],
            'year': list(range(STARTYEAR,ENDYEAR+1)),
            
            'month':[
                '01','02','03',
                '04','05','06',
                '07','08','09',
                '10','11','12'
            ],
            'time':'00:00',
            'grid':['3', '3']
            }
    )
    
    
    
    
    
 
    
    data2 = ct.catalogue.retrieve(
        'reanalysis-era5-single-levels-monthly-means',
        {
            'product_type': 'monthly_averaged_reanalysis',
            'variable': [
                'total_precipitation'
            ],
            'year': list(range(STARTYEAR,ENDYEAR+1)),
            'month':[
                '01','02','03',
                '04','05','06',
                '07','08','09',
                '10','11','12'
            ],
            'time': '00:00',
        }
    )
    
    
    
    
    
    
    
    
    
    lat1=city1['lat']
    lon1=city1['lon']
    
    lat2=city2['lat']
    lon2=city2['lon']
    
    lat3=city3['lat']
    lon3=city3['lon']
    
    
    
    
  # Extract data at the locationa
    adata_sel = ct.geo.extract_point(data, lon=lon1, lat=lat1)
    adata_sel2 = ct.geo.extract_point(data2, lon=lon1, lat=lat1)
 
   
    Tmean1 = ct.cube.resample(adata_sel, freq='month', dim='time', how='mean')
    Precip1 = ct.cdm.convert_units(adata_sel2, 'mm')
    Precip1 = Precip1 *30
    
  # Extract data at the location2
    bdata_sel = ct.geo.extract_point(data, lon=lon2, lat=lat2)
    bdata_sel2 = ct.geo.extract_point(data2, lon=lon2, lat=lat2)
 
   
    Tmean2 = ct.cube.resample(bdata_sel, freq='month', dim='time', how='mean')
    Precip2 = ct.cdm.convert_units(bdata_sel2, 'mm')
    Precip2 = Precip2 *30
    
  # Extract data at the location3
    cdata_sel = ct.geo.extract_point(data, lon=lon3, lat=lat3)
    cdata_sel2 = ct.geo.extract_point(data2, lon=lon3, lat=lat3)
 
   
    Tmean3 = ct.cube.resample(cdata_sel, freq='month', dim='time', how='mean')
    Precip3 = ct.cdm.convert_units(cdata_sel2, 'mm')
    Precip3 = Precip3 *30
    
    
    
    
    


    # Show the result as a time-series on an interactive chart
    figure = ct.chart.line(
    Tmean1,
    line={
        'color':'blue',
        'width':2,
    },
    layout_kwargs={
        'title': 'Monthly average temperature',
        'xaxis': {
            'title':'Time (month and year)',
        },
        'yaxis': {
            'title':'ERA5 2m Air Temperature (Celsius)',
        },
    },    
    scatter_kwargs = {
        'mode':'lines',
        'name':city1['label']

    }
    )
        
        
        
        
        
    # temp plot 2     
    ct.chart.line(
    Tmean2,
    fig=figure,
    line={
        'color':'red',
        'width':2,
    },
    scatter_kwargs = {
        'mode':'lines',
      'name':city2['label']
    }
    )
        
  
        
        
     # temp plot 3

    ct.chart.line(
    Tmean3,
    fig=figure,
    line={
        'color':'green',
        'width':2,
    },
    scatter_kwargs = {
        'mode':'lines',
      'name':city3['label']
    }
        
        
        
    )

    
    
    
        # Plot the precipitation time-series as bars on the chart
    figure2 = ct.chart.bar(
        Precip1,
        layout_kwargs = {
         'title': 'Monthly total precipitation',
         'xaxis': {
             'title':'Time (month and year)'},
        'yaxis': {
            'title':'Precipitation (mm)',

         },
        },
   

        bar_kwargs = {
         'showlegend': True,
         'marker': {'color': 'blue'},
      'name':city1['label']
    }        
        )
    
    
    figure2 = ct.chart.bar(
        Precip2,
        fig=figure2,
        bar_kwargs = {
         'showlegend': True,
         'marker': {'color': 'red'},            
      'name':city2['label']
    } 
        )
        
        
    figure2 = ct.chart.bar(
        Precip3,
        fig=figure2,
        bar_kwargs= {
         'showlegend': True,
         'marker': {'color': 'green'},            
      'name':city3['label']
    } 
        )

    return figure, figure2
